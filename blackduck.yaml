# Source: Postgres.yaml

apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: postgres
    name: blackduck-sample
  name: blackduck-sample-blackduck-postgres
  namespace: blackduck-sample
spec:
  replicas: 1
  selector:
    app: blackduck
    component: postgres
    name: blackduck-sample
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blackduck
        component: postgres
        name: blackduck-sample
      name: blackduck-sample-blackduck-postgres
    spec:
      containers:
        - env:
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: "300"
            - name: POSTGRESQL_SHARED_BUFFERS
              value: 1024MB
            - name: POSTGRESQL_DATABASE
              value: blackduck
            - name: POSTGRESQL_USER
              value: blackduck
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: HUB_POSTGRES_ADMIN_PASSWORD_FILE
                  name: blackduck-sample-blackduck-db-creds
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: HUB_POSTGRES_POSTGRES_PASSWORD_FILE
                  name: blackduck-sample-blackduck-db-creds
          envFrom:
            - configMapRef:
                name: blackduck-sample-blackduck-db-config
          image: registry.access.redhat.com/rhscl/postgresql-96-rhel7:1
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - sh
                  - -c
                  - LD_LIBRARY_PATH=/opt/rh/rh-postgresql96/root/usr/lib64 /opt/rh/rh-postgresql96/root/usr/bin/pg_ctl
                    -D /var/lib/pgsql/data/userdata -l logfile stop
          name: blackduck-sample-blackduck-postgres
          ports:
            - containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - /opt/rh/rh-postgresql96/root/usr/bin/pg_isready -h localhost
            failureThreshold: 10
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            requests:
              cpu: "1"
              memory: 3072M
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: postgres-data-volume
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 0
      terminationGracePeriodSeconds: 0
      volumes:
        - name: postgres-data-volume
          persistentVolumeClaim:
            claimName: blackduck-sample-blackduck-postgres
status:
  replicas: 0

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: postgres
    name: blackduck-sample
  name: blackduck-sample-blackduck-postgres
  namespace: blackduck-sample
spec:
  ports:
    - name: port-5432
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app: blackduck
    component: postgres
    name: blackduck-sample
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
data:
  HUB_POSTGRES_ADMIN: blackduck
  HUB_POSTGRES_ENABLE_SSL: "false"
  HUB_POSTGRES_HOST: blackduck-sample-blackduck-postgres
  HUB_POSTGRES_PORT: "5432"
  HUB_POSTGRES_USER: blackduck_user
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: postgres
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-db-config
  namespace: blackduck-sample

---
apiVersion: v1
data:
  HUB_POSTGRES_ADMIN_PASSWORD_FILE: YmxhY2tkdWNr
  HUB_POSTGRES_POSTGRES_PASSWORD_FILE: YmxhY2tkdWNr
  HUB_POSTGRES_USER_PASSWORD_FILE: YmxhY2tkdWNr
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: postgres
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-db-creds
  namespace: blackduck-sample
type: Opaque

---
# Source: PersistentVolumeClaims.yaml

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: pvc
    name: blackduck-sample
  name: blackduck-sample-blackduck-registration
  namespace: blackduck-sample
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: pvc
    name: blackduck-sample
  name: blackduck-sample-blackduck-webapp
  namespace: blackduck-sample
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: pvc
    name: blackduck-sample
  name: blackduck-sample-blackduck-zookeeper
  namespace: blackduck-sample
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: pvc
    name: blackduck-sample
  name: blackduck-sample-blackduck-postgres
  namespace: blackduck-sample
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 150Gi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: pvc
    name: blackduck-sample
  name: blackduck-sample-blackduck-cfssl
  namespace: blackduck-sample
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: pvc
    name: blackduck-sample
  name: blackduck-sample-blackduck-solr
  namespace: blackduck-sample
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: pvc
    name: blackduck-sample
  name: blackduck-sample-blackduck-logstash
  namespace: blackduck-sample
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: pvc
    name: blackduck-sample
  name: blackduck-sample-blackduck-uploadcache-data
  namespace: blackduck-sample
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: pvc
    name: blackduck-sample
  name: blackduck-sample-blackduck-authentication
  namespace: blackduck-sample
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
status: {}

---
# Source: BlackDuckComponents.yaml

apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: cfssl
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-cfssl
  namespace: blackduck-sample
spec:
  replicas: 1
  selector:
    app: blackduck
    component: cfssl
    name: blackduck-sample
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blackduck
        component: cfssl
        name: blackduck-sample
        version: 2019.6.1
      name: blackduck-sample-blackduck-cfssl
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: blackduck-sample-blackduck-config
          image: docker.io/blackducksoftware/blackduck-cfssl:1.0.0
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - http://localhost:8888/api/v1/cfssl/scaninfo
            failureThreshold: 10
            initialDelaySeconds: 240
            periodSeconds: 30
            timeoutSeconds: 10
          name: cfssl
          ports:
            - containerPort: 8888
              protocol: TCP
          resources:
            limits:
              memory: 640M
            requests:
              memory: 640M
          volumeMounts:
            - mountPath: /etc/cfssl
              name: dir-cfssl
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 0
      volumes:
        - name: dir-cfssl
          persistentVolumeClaim:
            claimName: blackduck-sample-blackduck-cfssl
status:
  replicas: 0

---
apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: webserver
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-webserver
  namespace: blackduck-sample
spec:
  replicas: 1
  selector:
    app: blackduck
    component: webserver
    name: blackduck-sample
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blackduck
        component: webserver
        name: blackduck-sample
        version: 2019.6.1
      name: blackduck-sample-blackduck-webserver
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: blackduck-sample-blackduck-config
          image: docker.io/blackducksoftware/blackduck-nginx:1.0.7
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - https://localhost:8443/health-checks/liveness
                - /tmp/secrets/WEBSERVER_CUSTOM_CERT_FILE
            failureThreshold: 10
            initialDelaySeconds: 180
            periodSeconds: 30
            timeoutSeconds: 10
          name: webserver
          ports:
            - containerPort: 8443
              protocol: TCP
          resources:
            limits:
              memory: 512M
            requests:
              memory: 512M
          volumeMounts:
            - mountPath: /opt/blackduck/hub/webserver/security
              name: dir-webserver
            - mountPath: /tmp/secrets/WEBSERVER_CUSTOM_CERT_FILE
              name: certificate
              subPath: WEBSERVER_CUSTOM_CERT_FILE
            - mountPath: /tmp/secrets/WEBSERVER_CUSTOM_KEY_FILE
              name: certificate
              subPath: WEBSERVER_CUSTOM_KEY_FILE
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 0
      volumes:
        - emptyDir: {}
          name: dir-webserver
        - name: certificate
          secret:
            defaultMode: 292
            secretName: blackduck-sample-blackduck-webserver-certificate
status:
  replicas: 0

---
apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: documentation
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-documentation
  namespace: blackduck-sample
spec:
  replicas: 1
  selector:
    app: blackduck
    component: documentation
    name: blackduck-sample
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blackduck
        component: documentation
        name: blackduck-sample
        version: 2019.6.1
      name: blackduck-sample-blackduck-documentation
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: blackduck-sample-blackduck-config
          image: docker.io/blackducksoftware/blackduck-documentation:2019.6.1
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - https://127.0.0.1:8443/hubdoc/health-checks/liveness
                - /opt/blackduck/hub/hub-documentation/security/root.crt
            failureThreshold: 10
            initialDelaySeconds: 240
            periodSeconds: 30
            timeoutSeconds: 10
          name: documentation
          ports:
            - containerPort: 8443
              protocol: TCP
          resources:
            limits:
              memory: 512M
            requests:
              memory: 512M
          volumeMounts:
            - mountPath: /opt/blackduck/hub/hub-documentation/security
              name: dir-documentation
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 0
      volumes:
        - emptyDir: {}
          name: dir-documentation
status:
  replicas: 0

---
apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: registration
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-registration
  namespace: blackduck-sample
spec:
  replicas: 1
  selector:
    app: blackduck
    component: registration
    name: blackduck-sample
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blackduck
        component: registration
        name: blackduck-sample
        version: 2019.6.1
      name: blackduck-sample-blackduck-registration
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: blackduck-sample-blackduck-config
          image: docker.io/blackducksoftware/blackduck-registration:2019.6.1
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - https://localhost:8443/registration/health-checks/liveness
                - /opt/blackduck/hub/hub-registration/security/root.crt
                - /opt/blackduck/hub/hub-registration/security/blackduck_system.crt
                - /opt/blackduck/hub/hub-registration/security/blackduck_system.key
            failureThreshold: 10
            initialDelaySeconds: 240
            periodSeconds: 30
            timeoutSeconds: 10
          name: registration
          ports:
            - containerPort: 8443
              protocol: TCP
          resources:
            limits:
              memory: 1G
            requests:
              cpu: "1"
              memory: 1G
          volumeMounts:
            - mountPath: /opt/blackduck/hub/hub-registration/config
              name: dir-registration
            - mountPath: /opt/blackduck/hub/hub-registration/security
              name: dir-registration-security
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 0
      volumes:
        - name: dir-registration
          persistentVolumeClaim:
            claimName: blackduck-sample-blackduck-registration
        - emptyDir: {}
          name: dir-registration-security
status:
  replicas: 0

---
apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: zookeeper
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-zookeeper
  namespace: blackduck-sample
spec:
  replicas: 1
  selector:
    app: blackduck
    component: zookeeper
    name: blackduck-sample
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blackduck
        component: zookeeper
        name: blackduck-sample
        version: 2019.6.1
      name: blackduck-sample-blackduck-zookeeper
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: blackduck-sample-blackduck-config
          image: docker.io/blackducksoftware/blackduck-zookeeper:1.0.0
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - zkServer.sh
                - status
                - /opt/blackduck/zookeeper/conf/zoo.cfg
            failureThreshold: 10
            initialDelaySeconds: 240
            periodSeconds: 30
            timeoutSeconds: 10
          name: zookeeper
          ports:
            - containerPort: 2181
              protocol: TCP
          resources:
            limits:
              memory: 640M
            requests:
              cpu: "1"
              memory: 640M
          volumeMounts:
            - mountPath: /opt/blackduck/zookeeper/data
              name: dir-zookeeper
              subPath: data
            - mountPath: /opt/blackduck/zookeeper/datalog
              name: dir-zookeeper
              subPath: datalog
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 0
      volumes:
        - name: dir-zookeeper
          persistentVolumeClaim:
            claimName: blackduck-sample-blackduck-zookeeper
status:
  replicas: 0

---
apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: jobrunner
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-jobrunner
  namespace: blackduck-sample
spec:
  replicas: 1
  selector:
    app: blackduck
    component: jobrunner
    name: blackduck-sample
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blackduck
        component: jobrunner
        name: blackduck-sample
        version: 2019.6.1
      name: blackduck-sample-blackduck-jobrunner
    spec:
      containers:
        - env:
            - name: HUB_MAX_MEMORY
              value: 4096m
          envFrom:
            - configMapRef:
                name: blackduck-sample-blackduck-config
            - configMapRef:
                name: blackduck-sample-blackduck-db-config
          image: docker.io/blackducksoftware/blackduck-jobrunner:2019.6.1
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
            failureThreshold: 10
            initialDelaySeconds: 240
            periodSeconds: 30
            timeoutSeconds: 10
          name: jobrunner
          ports:
            - containerPort: 3001
              protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 4608M
            requests:
              cpu: "1"
              memory: 4608M
          volumeMounts:
            - mountPath: /tmp/secrets/HUB_POSTGRES_ADMIN_PASSWORD_FILE
              name: db-passwords
              subPath: HUB_POSTGRES_ADMIN_PASSWORD_FILE
            - mountPath: /tmp/secrets/HUB_POSTGRES_USER_PASSWORD_FILE
              name: db-passwords
              subPath: HUB_POSTGRES_USER_PASSWORD_FILE
            - mountPath: /opt/blackduck/hub/jobrunner/security
              name: dir-jobrunner
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 0
      volumes:
        - name: db-passwords
          secret:
            defaultMode: 420
            items:
              - key: HUB_POSTGRES_ADMIN_PASSWORD_FILE
                mode: 420
                path: HUB_POSTGRES_ADMIN_PASSWORD_FILE
              - key: HUB_POSTGRES_USER_PASSWORD_FILE
                mode: 420
                path: HUB_POSTGRES_USER_PASSWORD_FILE
            secretName: blackduck-sample-blackduck-db-creds
        - emptyDir: {}
          name: dir-jobrunner
status:
  replicas: 0

---
apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: scan
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-scan
  namespace: blackduck-sample
spec:
  replicas: 1
  selector:
    app: blackduck
    component: scan
    name: blackduck-sample
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blackduck
        component: scan
        name: blackduck-sample
        version: 2019.6.1
      name: blackduck-sample-blackduck-scan
    spec:
      containers:
        - env:
            - name: HUB_MAX_MEMORY
              value: 2048m
          envFrom:
            - configMapRef:
                name: blackduck-sample-blackduck-config
            - configMapRef:
                name: blackduck-sample-blackduck-db-config
          image: docker.io/blackducksoftware/blackduck-scan:2019.6.1
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - https://127.0.0.1:8443/api/health-checks/liveness
                - /opt/blackduck/hub/hub-scan/security/root.crt
                - /opt/blackduck/hub/hub-scan/security/blackduck_system.crt
                - /opt/blackduck/hub/hub-scan/security/blackduck_system.key
            failureThreshold: 10
            initialDelaySeconds: 240
            periodSeconds: 30
            timeoutSeconds: 10
          name: scan
          ports:
            - containerPort: 8443
              protocol: TCP
          resources:
            limits:
              memory: 2560M
            requests:
              memory: 2560M
          volumeMounts:
            - mountPath: /tmp/secrets/HUB_POSTGRES_ADMIN_PASSWORD_FILE
              name: db-passwords
              subPath: HUB_POSTGRES_ADMIN_PASSWORD_FILE
            - mountPath: /tmp/secrets/HUB_POSTGRES_USER_PASSWORD_FILE
              name: db-passwords
              subPath: HUB_POSTGRES_USER_PASSWORD_FILE
            - mountPath: /opt/blackduck/hub/hub-scan/security
              name: dir-scan
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 0
      volumes:
        - emptyDir: {}
          name: dir-scan
        - name: db-passwords
          secret:
            defaultMode: 420
            items:
              - key: HUB_POSTGRES_ADMIN_PASSWORD_FILE
                mode: 420
                path: HUB_POSTGRES_ADMIN_PASSWORD_FILE
              - key: HUB_POSTGRES_USER_PASSWORD_FILE
                mode: 420
                path: HUB_POSTGRES_USER_PASSWORD_FILE
            secretName: blackduck-sample-blackduck-db-creds
status:
  replicas: 0

---
apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: authentication
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-authentication
  namespace: blackduck-sample
spec:
  replicas: 1
  selector:
    app: blackduck
    component: authentication
    name: blackduck-sample
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blackduck
        component: authentication
        name: blackduck-sample
        version: 2019.6.1
      name: blackduck-sample-blackduck-authentication
    spec:
      containers:
        - env:
            - name: HUB_MAX_MEMORY
              value: 512m
          envFrom:
            - configMapRef:
                name: blackduck-sample-blackduck-db-config
            - configMapRef:
                name: blackduck-sample-blackduck-config
          image: docker.io/blackducksoftware/blackduck-authentication:2019.6.1
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - https://127.0.0.1:8443/api/health-checks/liveness
                - /opt/blackduck/hub/hub-authentication/security/root.crt
                - /opt/blackduck/hub/hub-authentication/security/blackduck_system.crt
                - /opt/blackduck/hub/hub-authentication/security/blackduck_system.key
            failureThreshold: 10
            initialDelaySeconds: 240
            periodSeconds: 30
            timeoutSeconds: 10
          name: authentication
          ports:
            - containerPort: 8443
              protocol: TCP
          resources:
            limits:
              memory: 1024M
            requests:
              memory: 1024M
          volumeMounts:
            - mountPath: /tmp/secrets/HUB_POSTGRES_ADMIN_PASSWORD_FILE
              name: db-passwords
              subPath: HUB_POSTGRES_ADMIN_PASSWORD_FILE
            - mountPath: /tmp/secrets/HUB_POSTGRES_USER_PASSWORD_FILE
              name: db-passwords
              subPath: HUB_POSTGRES_USER_PASSWORD_FILE
            - mountPath: /opt/blackduck/hub/hub-authentication/ldap
              name: dir-authentication
            - mountPath: /opt/blackduck/hub/hub-authentication/security
              name: dir-authentication-security
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 0
      volumes:
        - name: dir-authentication
          persistentVolumeClaim:
            claimName: blackduck-sample-blackduck-authentication
        - name: db-passwords
          secret:
            defaultMode: 420
            items:
              - key: HUB_POSTGRES_ADMIN_PASSWORD_FILE
                mode: 420
                path: HUB_POSTGRES_ADMIN_PASSWORD_FILE
              - key: HUB_POSTGRES_USER_PASSWORD_FILE
                mode: 420
                path: HUB_POSTGRES_USER_PASSWORD_FILE
            secretName: blackduck-sample-blackduck-db-creds
        - emptyDir: {}
          name: dir-authentication-security
status:
  replicas: 0

---
apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: webapp-logstash
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-webapp-logstash
  namespace: blackduck-sample
spec:
  replicas: 1
  selector:
    app: blackduck
    component: webapp-logstash
    name: blackduck-sample
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blackduck
        component: webapp-logstash
        name: blackduck-sample
        version: 2019.6.1
      name: blackduck-sample-blackduck-webapp-logstash
    spec:
      containers:
        - env:
            - name: HUB_MAX_MEMORY
              value: 2048m
          envFrom:
            - configMapRef:
                name: blackduck-sample-blackduck-config
            - configMapRef:
                name: blackduck-sample-blackduck-db-config
          image: docker.io/blackducksoftware/blackduck-webapp:2019.6.1
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - https://127.0.0.1:8443/api/health-checks/liveness
                - /opt/blackduck/hub/hub-webapp/security/root.crt
                - /opt/blackduck/hub/hub-webapp/security/blackduck_system.crt
                - /opt/blackduck/hub/hub-webapp/security/blackduck_system.key
            failureThreshold: 1000
            initialDelaySeconds: 360
            periodSeconds: 30
            timeoutSeconds: 10
          name: webapp
          ports:
            - containerPort: 8443
              protocol: TCP
          resources:
            limits:
              memory: 2560M
            requests:
              cpu: "1"
              memory: 2560M
          volumeMounts:
            - mountPath: /tmp/secrets/HUB_POSTGRES_ADMIN_PASSWORD_FILE
              name: db-passwords
              subPath: HUB_POSTGRES_ADMIN_PASSWORD_FILE
            - mountPath: /tmp/secrets/HUB_POSTGRES_USER_PASSWORD_FILE
              name: db-passwords
              subPath: HUB_POSTGRES_USER_PASSWORD_FILE
            - mountPath: /opt/blackduck/hub/hub-webapp/ldap
              name: dir-webapp
            - mountPath: /opt/blackduck/hub/hub-webapp/security
              name: dir-webapp-security
            - mountPath: /opt/blackduck/hub/logs
              name: dir-logstash
        - envFrom:
            - configMapRef:
                name: blackduck-sample-blackduck-config
          image: docker.io/blackducksoftware/blackduck-logstash:1.0.4
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - http://localhost:9600/
            failureThreshold: 1000
            initialDelaySeconds: 240
            periodSeconds: 30
            timeoutSeconds: 10
          name: logstash
          ports:
            - containerPort: 5044
              protocol: TCP
          resources:
            limits:
              memory: 1G
            requests:
              memory: 1G
          volumeMounts:
            - mountPath: /var/lib/logstash/data
              name: dir-logstash
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 0
      volumes:
        - emptyDir: {}
          name: dir-webapp-security
        - name: dir-webapp
          persistentVolumeClaim:
            claimName: blackduck-sample-blackduck-webapp
        - name: dir-logstash
          persistentVolumeClaim:
            claimName: blackduck-sample-blackduck-logstash
        - name: db-passwords
          secret:
            defaultMode: 420
            items:
              - key: HUB_POSTGRES_ADMIN_PASSWORD_FILE
                mode: 420
                path: HUB_POSTGRES_ADMIN_PASSWORD_FILE
              - key: HUB_POSTGRES_USER_PASSWORD_FILE
                mode: 420
                path: HUB_POSTGRES_USER_PASSWORD_FILE
            secretName: blackduck-sample-blackduck-db-creds
status:
  replicas: 0

---
apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: uploadcache
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-uploadcache
  namespace: blackduck-sample
spec:
  replicas: 1
  selector:
    app: blackduck
    component: uploadcache
    name: blackduck-sample
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blackduck
        component: uploadcache
        name: blackduck-sample
        version: 2019.6.1
      name: blackduck-sample-blackduck-uploadcache
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: blackduck-sample-blackduck-config
          image: docker.io/blackducksoftware/blackduck-upload-cache:1.0.8
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - curl
                - --insecure
                - -X
                - GET
                - --verbose
                - http://localhost:8086/live?full=1
            failureThreshold: 5
            initialDelaySeconds: 240
            periodSeconds: 30
            timeoutSeconds: 10
          name: uploadcache
          ports:
            - containerPort: 9443
              protocol: TCP
            - containerPort: 9444
              protocol: TCP
          resources:
            limits:
              memory: 512M
            requests:
              memory: 512M
          volumeMounts:
            - mountPath: /opt/blackduck/hub/blackduck-upload-cache/security
              name: dir-uploadcache-security
            - mountPath: /opt/blackduck/hub/blackduck-upload-cache/uploads
              name: dir-uploadcache-data
              subPath: uploads
            - mountPath: /opt/blackduck/hub/blackduck-upload-cache/keys
              name: dir-uploadcache-data
              subPath: keys
            - mountPath: /tmp/secrets
              name: dir-seal-key
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 0
      volumes:
        - emptyDir: {}
          name: dir-uploadcache-security
        - name: dir-uploadcache-data
          persistentVolumeClaim:
            claimName: blackduck-sample-blackduck-uploadcache-data
        - name: dir-seal-key
          secret:
            defaultMode: 292
            secretName: blackduck-sample-blackduck-upload-cache
status:
  replicas: 0

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: cfssl
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-cfssl
  namespace: blackduck-sample
spec:
  ports:
    - name: port-8888
      port: 8888
      protocol: TCP
      targetPort: 8888
  selector:
    app: blackduck
    component: cfssl
    name: blackduck-sample
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: webserver
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-webserver
  namespace: blackduck-sample
spec:
  ports:
    - name: port-443
      port: 443
      protocol: TCP
      targetPort: 8443
  selector:
    app: blackduck
    component: webserver
    name: blackduck-sample
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: documentation
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-documentation
  namespace: blackduck-sample
spec:
  ports:
    - name: port-8443
      port: 8443
      protocol: TCP
      targetPort: 8443
  selector:
    app: blackduck
    component: documentation
    name: blackduck-sample
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: registration
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-registration
  namespace: blackduck-sample
spec:
  ports:
    - name: port-8443
      port: 8443
      protocol: TCP
      targetPort: 8443
  selector:
    app: blackduck
    component: registration
    name: blackduck-sample
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: zookeeper
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-zookeeper
  namespace: blackduck-sample
spec:
  ports:
    - name: port-2181
      port: 2181
      protocol: TCP
      targetPort: 2181
  selector:
    app: blackduck
    component: zookeeper
    name: blackduck-sample
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: scan
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-scan
  namespace: blackduck-sample
spec:
  ports:
    - name: port-8443
      port: 8443
      protocol: TCP
      targetPort: 8443
  selector:
    app: blackduck
    component: scan
    name: blackduck-sample
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: authentication
    name: blackduck-sample
    version: 2019.6.1
  name: authentication
  namespace: blackduck-sample
spec:
  ports:
    - name: port-8443
      port: 8443
      protocol: TCP
      targetPort: 8443
  selector:
    app: blackduck
    component: authentication
    name: blackduck-sample
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: webapp-logstash
    name: blackduck-sample
    version: 2019.6.1
  name: webapp
  namespace: blackduck-sample
spec:
  ports:
    - name: port-8443
      port: 8443
      protocol: TCP
      targetPort: 8443
  selector:
    app: blackduck
    component: webapp-logstash
    name: blackduck-sample
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: webapp-logstash
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-logstash
  namespace: blackduck-sample
spec:
  ports:
    - name: port-5044
      port: 5044
      protocol: TCP
      targetPort: 5044
  selector:
    app: blackduck
    component: webapp-logstash
    name: blackduck-sample
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: uploadcache
    name: blackduck-sample
    version: 2019.6.1
  name: uploadcache
  namespace: blackduck-sample
spec:
  ports:
    - name: port-9443
      port: 9443
      protocol: TCP
      targetPort: 9443
    - name: port-9444
      port: 9444
      protocol: TCP
      targetPort: 9444
  selector:
    app: blackduck
    component: uploadcache
    name: blackduck-sample
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
data:
  BLACKDUCK_CFSSL_HOST: blackduck-sample-blackduck-cfssl
  BLACKDUCK_CFSSL_PORT: "8888"
  BROKER_URL: amqps://blackduck-sample-blackduck-rabbitmq/protecodesc
  BROKER_USE_SSL: "yes"
  CFSSL: blackduck-sample-blackduck-cfssl:8888
  CLIENT_CERT_CN: blackduck-sample-blackduck-binaryscanner
  DATA_RETENTION_IN_DAYS: "180"
  ENABLE_SOURCE_UPLOADS: "false"
  HTTPS_VERIFY_CERTS: "yes"
  HUB_CFSSL_HOST: blackduck-sample-blackduck-cfssl
  HUB_DOC_HOST: blackduck-sample-blackduck-documentation
  HUB_JOBRUNNER_HOST: blackduck-sample-blackduck-jobrunner
  HUB_LOGSTASH_HOST: blackduck-sample-blackduck-logstash
  HUB_REGISTRATION_HOST: blackduck-sample-blackduck-registration
  HUB_SCAN_HOST: blackduck-sample-blackduck-scan
  HUB_SOLR_HOST: blackduck-sample-blackduck-solr
  HUB_VERSION: 2019.6.1
  HUB_WEBSERVER_HOST: blackduck-sample-blackduck-webserver
  HUB_ZOOKEEPER_HOST: blackduck-sample-blackduck-zookeeper
  IPV4_ONLY: "0"
  MAX_TOTAL_SOURCE_SIZE_MB: "4000"
  RABBIT_MQ_HOST: blackduck-sample-blackduck-rabbitmq
  RABBIT_MQ_PORT: "5671"
  RABBITMQ_DEFAULT_VHOST: protecodesc
  RABBITMQ_SSL_FAIL_IF_NO_PEER_CERT: "false"
  RUN_SECRETS_DIR: /tmp/secrets
  SCANNER_CONCURRENCY: "1"
  USE_ALERT: "0"
  USE_BINARY_UPLOADS: "0"
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: configmap
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-config
  namespace: blackduck-sample

---
apiVersion: v1
data:
  WEBSERVER_CUSTOM_CERT_FILE: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVGakNDQXY2Z0F3SUJBZ0lSQS8vLy8vLy8vLy8vLy8vLy8vLy8vLzh3RFFZSktvWklodmNOQVFFTEJRQXcKZ2FVeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUlFdzFOWVhOellXTm9kWE5sZEhSek1STXdFUVlEVlFRSApFd3BDZFhKc2FXNW5kRzl1TVJ3d0dnWURWUVFKRXhNNE1EQWdSR2x6ZEhKcFkzUWdRWFpsYm5WbE1SOHdIUVlEClZRUUtFeFpDYkdGamF5QkVkV05ySUVKNUlGTjVibTl3YzNsek1SVXdFd1lEVlFRTEV3eERiRzkxWkNCT1lYUnAKZG1VeEV6QVJCZ05WQkFNVENrSnNZV05ySUVSMVkyc3dIaGNOTVRrd056TXdNVFExTWpNNFdoY05Nakl3TnpJNQpNVFExTWpNNFdqQ0JwVEVMTUFrR0ExVUVCaE1DVlZNeEZqQVVCZ05WQkFnVERVMWhjM05oWTJoMWMyVjBkSE14CkV6QVJCZ05WQkFjVENrSjFjbXhwYm1kMGIyNHhIREFhQmdOVkJBa1RFemd3TUNCRWFYTjBjbWxqZENCQmRtVnUKZFdVeEh6QWRCZ05WQkFvVEZrSnNZV05ySUVSMVkyc2dRbmtnVTNsdWIzQnplWE14RlRBVEJnTlZCQXNUREVOcwpiM1ZrSUU1aGRHbDJaVEVUTUJFR0ExVUVBeE1LUW14aFkyc2dSSFZqYXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCCkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxQNHIxM3Q0NTFiM0NNT2FUY3lKUWZzdE85WVhVU2Y5Nmo5YXZjMHVGTDYKaFA2RVVwZmt5ZVZpVmxycFdNTkxHWWk2ZlFTVENZZmphR2xNbk9RU01acnNjVlhwVkZhMzYxbmdGSUMzWnh2SgpIaitUV3prYktXVzJBS0dtTzhxNmszeGQ2T2gvRk45aDlITXRxeVNKVXZSQi82NSt0eTNDWlJSbk0xVmMwTTBqCkw4WGttUDlLUlJlWmR2RGkrb1cyU1hHMStoN2QrUXlWQTVkU1Zja29xaytNbm1YLzRKZG1tZlJsRUttaExKNkgKaXkvSEdpcDExTEM5alpGM2puQlZPcDF3dWFscjdWd0N2VENyaHg2NkZsMVQzNjBPZk5FWGxwTU0rZGl3Vi9xbwpoT1c2YWkweHhsV05aSTZQWFdaQ2NLZ0VoM3RQc0l3aFgzWElrWHMrQ2drQ0F3RUFBYU0vTUQwd0RnWURWUjBQCkFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUIKQWY4RUFqQUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNwVUFnaitwNUZSbHVNcUVtWFdSeWJFbXlvYnZaOApXNERSOTBwbG9tZmxvQURDeGgxNUhHeWR4eHhMMmpCeVc3bEtBLzlwSlVsaTJZUlhhV2NrMXZ2RHdNMThMc3hyCjloMEQ2RUdrRmNkYzFVM2kyREpYUjR2WWxjei9MdENCa3pzZXdZVDd1d3pjdEFkVUg5dklBSU82TUhDelg3L20Kdk9wd2NhNkNZem5ET0kzckR2aGJ1dWErRHFlSERJa0VOY2dRbGxhSXpjK2xvR0I4UFIwMkpXNVRXYVVBYkEvdwpvNzMyaFBGQ2s2V0pBOGQxWWZDQmlxbUw4djFGYjlzM0RHck1XZVlSeW03N1RsSHh1SGpvNG5sR0tMdVNaOVVvCi85dGhHc1BUS0YzTXE2dTRSUzk2UmIyVmVZVDA3S2JYOTRtNFBLL1Bvb1pZT3pleGQzeGk0ZE5kCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  WEBSERVER_CUSTOM_KEY_FILE: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBcy9pdlhlM2puVnZjSXc1cE56SWxCK3kwNzFoZFJKLzNxUDFxOXpTNFV2cUUvb1JTCmwrVEo1V0pXV3VsWXcwc1ppTHA5QkpNSmgrTm9hVXljNUJJeG11eHhWZWxVVnJmcldlQVVnTGRuRzhrZVA1TmIKT1JzcFpiWUFvYVk3eXJxVGZGM282SDhVMzJIMGN5MnJKSWxTOUVIL3JuNjNMY0psRkdjelZWelF6U012eGVTWQovMHBGRjVsMjhPTDZoYlpKY2JYNkh0MzVESlVEbDFKVnlTaXFUNHllWmYvZ2wyYVo5R1VRcWFFc25vZUxMOGNhCktuWFVzTDJOa1hlT2NGVTZuWEM1cVd2dFhBSzlNS3VISHJvV1hWUGZyUTU4MFJlV2t3ejUyTEJYK3FpRTVicHEKTFRIR1ZZMWtqbzlkWmtKd3FBU0hlMCt3akNGZmRjaVJlejRLQ1FJREFRQUJBb0lCQVFDbVhKcVhCRUVrZy9haApQVUFMY3NJQ2FrL3k4OGI3bWJmUXNibEFISzdLbmFOMHRwSzJzQm5sZlpwLzNUWmRDTDNvd3lLdnFNL2xtbFE1CkNrWDVHY3hhL25maHg1ZGJ0aFhMZGJUZUt5c1g1emliNGpZd09xaHd5ZVlaaDFXOEYrNGZ4NXQxMTR0TzF2aWwKdzdCeFRMT3U4SmRPRVBwNVJUbzB1eFVic25tZE5YMm9pZzdZVGhVQWMzQXA1Z1RaMS9yN0VGeWtGNXZDaHNrcwpEQzJyNHp3WTdrYStFbzh5S0ljSWt0d05GWUhMendwa0ZvOC9yaUdPYVhBcWE1RnVIUzRTSjhoemVpa04rV1Q0CjlaYkJMTVN6QWRRWWJYdC9TZHQ2eWFkY1drWGROa1pueWIxNm9hdVVncDRFNHVtSllnNWJUcmJUVzFwWUMzN2QKaGRBbFFnUUJBb0dCQU5TUDQvblZYV2ZVM0tETWtzUURyd3hQa1VaWVdNSWJ2UVRKaUwwSnloZEhUT252ZFMzbApDTXZoVjFuS0FEL2xwTnJjQ0hWdW92QWZEUDVGRWxubTgwOVlLaUZ4dWRzRHgxSzVoQW1IbTFETU90VHM4YXM0CmxJV3VTK3NiVmVNaHdTVjlKVnlNWGtsWFc4R3JzV0hVMldyNUhHcWZ4ZFV1Yy9pS0pHMGtPdDZCQW9HQkFOaS8KMDQxeGxPRHpwWTNqZXl4RS94djA4NmUrSzFNOFgxZlMrOUlrTUEyYmx6Tk9TMlFYTUpBMWhPdUg1Q3RsckRzUQorbVRtQmxUMWdZNzlrK3ZtMEw4MktCcHY1VHdaUkQxTnF2QVp3Y2ppaS8rd3laNUpwa3IwODJ0ZU5sSTNHVzY0CjdQNS9uSEp1bWlkWEVqeUt0dExUSjZSZFE1TldIU3RROUcvUXozZUpBb0dCQUp3dDBVcnF5NE9UOGp1dnRCS1QKeGxWY1RSaUxwME9RRC9UcGd5K3Fkck5kN3hSZm5oQ0huVXY0R1M5ZTdZb0ZXSGg2ZlRpVGZ1TEJYZEdodkpjVAp5eWc4VmxCV2VFR0U2RHBQRnNYTnZuL0NYMk85YU4vdVphcEhZMzZ1aWcrbDZIMThFeXlKOG1rZTU4dElOTC8yCkhYMnM1WVV1T2JTbU9nMmVxcDhLcExxQkFvR0FWNkJkcDM0MndTYmZWRmlXRUZTb2lpWGlaM3RUU3FoS3AxZk4KcEt3cW5TVzgzK29VUXBlNWMyT2ZwQlRoSXNaTTllZ3NRcVJZQlBybjhPWUZha1o3T0FKdC9ob2tvOEpYT3kxdQpJUGxZeFowSkdrcmZoOVdnbkFjaGJkTzl4RWt3Ui9vTkhlcDdWaXZ1dUY3VUtaT3V5OWEvM1F3emFKcFUycEUwCjhRdUxCSGtDZ1lFQXk5VFdscGora1E3akFrTXhPaU41bmxXUzRCc21ZOEdPTW54TmV0QTE2WG90UzdhaWxOcSsKRzNWb3VtKzhXRy9ralNIM056eXZFbUducTZaRE1tZy9Jalc1d2tsVlVYT1Jqc2dzSUdzcmVIaFVZZ3Vnb25PUQpObmZZNVJnaHFKSlJYb2dTWWIrLzlXbmxia01UUk5xTlllYTZybTlrVjJoRW5yNzhjL3oxOHI0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: secret
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-webserver-certificate
  namespace: blackduck-sample
type: Opaque

---
apiVersion: v1
data:
  SEAL_KEY: ""
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app: blackduck
    component: uploadcache
    name: blackduck-sample
    version: 2019.6.1
  name: blackduck-sample-blackduck-upload-cache
  namespace: blackduck-sample
type: Opaque
